---

# - name: check if kubeseal is already present
#   stat:
#     path: "{{ sealed_secrets_binary_path }}"
#   register: sealed_secrets_kubeseal_result

# - name: check version of kubeseal if present
#   command: "{{ sealed_secrets_binary_path }} --version"
#   register: sealed_secrets_kubeseal_version
#   when: sealed_secrets_kubeseal_result.stat.exists

# FIXME: we do not have checksums on the download page :/
# so we would need to at least run a version comparison

- name: ensure namespace exists
  community.kubernetes.k8s:
    api_key: "{{ k8s_api_key | default(omit) }}"
    ca_cert: "{{ k8s_ca_cert | default(omit) }}"
    client_cert: "{{ k8s_client_cert | default(omit) }}"
    client_key: "{{ k8s_client_key | default(omit) }}"
    context: "{{ k8s_context | default(omit) }}"
    host: "{{ k8s_host | default(omit) }}"
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    password: "{{ k8s_password | default(omit) }}"
    proxy: "{{ k8s_proxy | default(omit) }}"
    username: "{{ k8s_username | default(omit) }}"
    validate_certs: "{{ k8s_validate_certs | default(omit) }}"
    api_version: v1
    kind: Namespace
    name: "{{ sealed_secrets_namespace }}"
  register: sealed_secrets_project_result

- name: ensure secrets are created - BYO certificates case
  community.kubernetes.k8s:
    api_key: "{{ k8s_api_key | default(omit) }}"
    ca_cert: "{{ k8s_ca_cert | default(omit) }}"
    client_cert: "{{ k8s_client_cert | default(omit) }}"
    client_key: "{{ k8s_client_key | default(omit) }}"
    context: "{{ k8s_context | default(omit) }}"
    host: "{{ k8s_host | default(omit) }}"
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    password: "{{ k8s_password | default(omit) }}"
    proxy: "{{ k8s_proxy | default(omit) }}"
    username: "{{ k8s_username | default(omit) }}"
    validate_certs: "{{ k8s_validate_certs | default(omit) }}"
    state: present
    definition: "{{ lookup('template', 'byo_certs_secret.yaml.j2') }}"
  when:
    - sealed_secrets_private_key is defined and sealed_secrets_private_key != ""
    - sealed_secrets_public_key is defined and sealed_secrets_public_key != ""

- name: deploy sealed secrets helm chart (ocp version)
  community.kubernetes.helm:
    name: "sealed-secrets"
    chart_repo_url: "https://bitnami-labs.github.io/sealed-secrets"
    chart_ref: "sealed-secrets"
    chart_version: "{{ sealedsecrets_helm_chart_version | default(omit) }}"
    release_namespace: "{{ sealed_secrets_namespace }}"
    values: "{{ lookup('file', 'files/helm-values.yaml') | from_yaml }}"

- name: install kubeseal - the lazy developer always downloads
  become: "{{ sealed_secrets_binary_become }}"
  get_url:
    url: "{{ sealed_secrets_kubeseal_downloadurl }}"
    dest: "{{ sealed_secrets_binary_path }}"
    mode: 0755
    force: yes
