apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: "{{ argocd_name }}"
  namespace: "{{ argocd_namespace }}"
spec:
  dex:
    openShiftOAuth: true
  rbac:
    defaultPolicy: 'role:readonly'
    policy: |
{%  for argogroup in argocd_groups %}
      g, {{ argogroup.name }}, role:{{ argogroup.permission }}
{%  endfor %}
    scopes: '[groups]'
  server:
    host: "{{ argocd_route }}"
    insecure: {{ argocd_insecure }}
    route:
      enabled: true
{%  if argocd_insecure | bool == True %}
      tls:
        termination: edge
{%  endif %}
{% if argocd_initial_repositories is defined and argocd_initial_repositories | length > 0 %}
  initialRepositories: |
    {{ argocd_initial_repositories | to_nice_yaml(indent=0) | indent(4) }}
{% endif %}
{% if argocd_repository_credentials is defined and argocd_repository_credentials | length > 0 %}
  repositoryCredentials: |
    {{ argocd_repository_credentials | to_nice_yaml(indent=0) | indent(4) }}
{% endif %}

{% if argocd_initial_known_hosts is defined and argocd_initial_known_hosts['keys'] | length > 0 %}
  initialSSHKnownHosts:
    excludedefaulthosts: {{ argocd_initial_known_hosts.excludedefaulthosts }}
    keys: |
{%  for argocd_initial_known_host in argocd_initial_known_hosts['keys'] %}
      {{ argocd_initial_known_host }}
{%  endfor %}
{% endif %}

